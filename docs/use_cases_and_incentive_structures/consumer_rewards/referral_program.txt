```python
# File: referral_program.py
# Description: Implementation of the Referral Program for Elysium Marketplace

from datetime import datetime
from database import db_session
from models import User, Transaction, ReferralReward
from constants import ElysiumToken, RewardsPool

class ReferralProgram:
    def __init__(self):
        self.reward_amount = 100  # Amount of ET tokens rewarded per successful referral

    def create_referral_code(self, user_id):
        user = User.query.filter_by(id=user_id).first()
        if not user:
            raise ValueError("User not found")
        
        referral_code = self.generate_referral_code(user_id)
        user.referral_code = referral_code
        db_session.commit()
        return referral_code

    def generate_referral_code(self, user_id):
        timestamp = datetime.now().strftime("%Y%m%d%H%M%S")
        return f"ELY-{user_id}-{timestamp}"

    def redeem_referral_code(self, referred_user_id, referral_code):
        referrer_id = self.extract_user_id_from_referral_code(referral_code)
        referrer = User.query.filter_by(id=referrer_id).first()
        referred_user = User.query.filter_by(id=referred_user_id).first()

        if not referrer or not referred_user:
            raise ValueError("Referrer or referred user not found")

        if referred_user.referred_by:
            raise ValueError("Referred user has already been referred by someone else")

        # Assign the referrer to the referred user
        referred_user.referred_by = referrer_id
        db_session.commit()

        # Reward the referrer with Elysium Tokens
        self.reward_referrer(referrer_id)

    def extract_user_id_from_referral_code(self, referral_code):
        try:
            return int(referral_code.split('-')[1])
        except (IndexError, ValueError):
            raise ValueError("Invalid referral code format")

    def reward_referrer(self, referrer_id):
        referrer = User.query.filter_by(id=referrer_id).first()
        if not referrer:
            raise ValueError("Referrer not found")

        # Create a transaction for the referral reward
        transaction = Transaction(
            user_id=referrer_id,
            token_amount=self.reward_amount,
            token_type=ElysiumToken,
            transaction_type='referral_reward',
            timestamp=datetime.now()
        )
        db_session.add(transaction)

        # Update the Rewards Pool
        RewardsPool.decrease(self.reward_amount)

        # Add a record to the ReferralReward table
        referral_reward = ReferralReward(
            referrer_id=referrer_id,
            reward_amount=self.reward_amount,
            reward_date=datetime.now()
        )
        db_session.add(referral_reward)

        db_session.commit()

# Example usage:
# referral_program = ReferralProgram()
# user_referral_code = referral_program.create_referral_code(user_id=123)
# referral_program.redeem_referral_code(referred_user_id=456, referral_code=user_referral_code)
```

This Python code represents a complete implementation of the referral program for the Elysium Marketplace. It includes methods for creating a referral code, redeeming a referral code, and rewarding the referrer with Elysium Tokens (ET). The code assumes the existence of a database session (`db_session`), user and transaction models (`User`, `Transaction`, `ReferralReward`), and constants (`ElysiumToken`, `RewardsPool`). The `create_referral_code` method generates a unique referral code for a user, the `redeem_referral_code` method allows a new user to redeem a referral code, and the `reward_referrer` method handles the logic for rewarding the referrer with ET tokens.