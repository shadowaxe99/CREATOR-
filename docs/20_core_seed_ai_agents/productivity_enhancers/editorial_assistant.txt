```python
import nltk
from textblob import TextBlob
from nltk.corpus import stopwords
from string import punctuation

# Ensure that the necessary NLTK corpora are downloaded
nltk.download('punkt')
nltk.download('stopwords')

class EditorialAssistant:
    def __init__(self):
        self.stop_words = set(stopwords.words('english'))
    
    def clean_text(self, text):
        # Remove punctuation and stop words
        no_punct = ''.join([char for char in text if char not in punctuation])
        words = no_punct.split()
        clean_words = [word for word in words if word.lower() not in self.stop_words]
        return ' '.join(clean_words)
    
    def check_grammar(self, text):
        # Use TextBlob for grammar checking
        blob = TextBlob(text)
        corrected_text = blob.correct()
        return str(corrected_text)
    
    def suggest_improvements(self, text):
        # Use TextBlob for text analysis and suggestions
        blob = TextBlob(text)
        suggestions = []
        for sentence in blob.sentences:
            if sentence.sentiment.polarity < 0.1:
                suggestions.append(f"Consider revising this sentence for a more positive tone: '{sentence}'")
        return suggestions
    
    def summarize_content(self, text, num_sentences=3):
        # Use NLTK for text summarization
        blob = TextBlob(text)
        sentences = blob.sentences
        # Sort sentences by length and return the shortest ones as a summary
        summary = ' '.join([str(sentence) for sentence in sorted(sentences, key=len)[:num_sentences]])
        return summary

# Example usage:
# assistant = EditorialAssistant()
# text = "This is a sample text with bad grammer and speling. It also has some sentences that are too long and not very clear. The purpose of this text is to demonstrate how the Editorial Assistant can be used."
# cleaned_text = assistant.clean_text(text)
# grammar_checked_text = assistant.check_grammar(cleaned_text)
# suggestions = assistant.suggest_improvements(grammar_checked_text)
# summary = assistant.summarize_content(grammar_checked_text)

# print("Cleaned Text:", cleaned_text)
# print("Grammar Checked Text:", grammar_checked_text)
# print("Suggestions:", suggestions)
# print("Summary:", summary)
```
