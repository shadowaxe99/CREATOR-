```python
import os
import cv2
from moviepy.editor import VideoFileClip, concatenate_videoclips
from ai_video_effects import apply_effects_to_video

class VideoVirtuoso:
    def __init__(self, source_folder, output_folder):
        self.source_folder = source_folder
        self.output_folder = output_folder
        self.ensure_directory_exists(self.output_folder)

    @staticmethod
    def ensure_directory_exists(folder_path):
        if not os.path.exists(folder_path):
            os.makedirs(folder_path)

    def edit_video(self, video_filenames, output_filename, effects=None):
        clips = [VideoFileClip(os.path.join(self.source_folder, filename)) for filename in video_filenames]
        concatenated_clip = concatenate_videoclips(clips, method="compose")
        
        if effects:
            concatenated_clip = apply_effects_to_video(concatenated_clip, effects)
        
        output_path = os.path.join(self.output_folder, output_filename)
        concatenated_clip.write_videofile(output_path, codec="libx264", audio_codec="aac")

    def extract_frames(self, video_filename, interval=1):
        video_path = os.path.join(self.source_folder, video_filename)
        video_capture = cv2.VideoCapture(video_path)
        success, frame = video_capture.read()
        count = 0

        while success:
            if count % interval == 0:
                frame_output_path = os.path.join(self.output_folder, f"frame_{count}.jpg")
                cv2.imwrite(frame_output_path, frame)
            success, frame = video_capture.read()
            count += 1

        video_capture.release()

    def create_video_from_images(self, image_filenames, output_filename, fps=24):
        frame_array = []
        size = None

        for filename in image_filenames:
            img_path = os.path.join(self.source_folder, filename)
            img = cv2.imread(img_path)
            height, width, layers = img.shape
            size = (width, height)
            frame_array.append(img)

        output_path = os.path.join(self.output_folder, output_filename)
        out = cv2.VideoWriter(output_path, cv2.VideoWriter_fourcc(*'mp4v'), fps, size)

        for frame in frame_array:
            out.write(frame)

        out.release()

# Example usage:
# video_editor = VideoVirtuoso(source_folder='source_videos', output_folder='edited_videos')
# video_editor.edit_video(['clip1.mp4', 'clip2.mp4'], 'final_video.mp4', effects=['black_white', 'vignette'])
# video_editor.extract_frames('final_video.mp4', interval=30)
# video_editor.create_video_from_images(['frame_0.jpg', 'frame_30.jpg'], 'timelapse_video.mp4', fps=1)
```

This code provides a class `VideoVirtuoso` with methods to edit videos by concatenating clips, applying effects, extracting frames at a given interval, and creating a video from a sequence of images. The `ai_video_effects` module is assumed to be a separate file providing the `apply_effects_to_video` function, which is not detailed here. The example usage at the bottom demonstrates how to instantiate the class and use its methods.